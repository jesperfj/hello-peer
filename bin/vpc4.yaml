AWSTemplateFormatVersion: "2010-09-09"

Description: One RDS database (no Internet access) and one EC2 instance with ssh access from Internet

Parameters:
  StackName:
    Type: String
  Cidr:
    Type: String
    Default: 172.31.0.0/24
  Cidr1:
    Type: String
    Default: 172.31.0.0/26
  Cidr2:
    Type: String
    Default: 172.31.0.64/26
  CidrC:
    Type: String
    Default: 172.31.0.128/25

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: Cidr

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: Cidr1

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: Cidr2

  SubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: CidrC

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway

  RouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC

  RouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC

  RouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC

  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: RouteTableC
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway

  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: Subnet1
      RouteTableId:
        Ref: RouteTable1

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: Subnet2
      RouteTableId:
        Ref: RouteTable2

  SubnetRouteTableAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: SubnetC
      RouteTableId:
        Ref: RouteTableC

  NetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC

  InboundSSHNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NetworkAcl
      RuleNumber: '101'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '22'
        To: '22'
  
  InboundResponsePortsNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NetworkAcl
      RuleNumber: '102'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '1024'
        To: '65535'

  OutBoundNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: NetworkAcl
      RuleNumber: '100'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '65535'

  SubnetNetworkAclAssociationC:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: SubnetC
      NetworkAclId:
        Ref: NetworkAcl

  SecurityGroupC:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: Control Plane security group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0

  SecurityGroup12:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId:
        Ref: VPC
      GroupDescription: Basic permissive security group
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '0'
        ToPort: '65535'
        CidrIp: 0.0.0.0/0

  PublicIPAddress:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  IPAddressAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt PublicIPAddress.AllocationId
      NetworkInterfaceId:
        Ref: NICC

  NICC:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId:
        Ref: SubnetC
      Description: Internet facing NIC
      GroupSet: 
      - Ref: SecurityGroupC
      SourceDestCheck: true

  NIC1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId:
        Ref: Subnet1
      Description: Private facing NIC
      GroupSet: 
      - Ref: SecurityGroup12
      SourceDestCheck: true

  NIC2:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId:
        Ref: Subnet2
      Description: Private facing NIC
      GroupSet: 
      - Ref: SecurityGroup12
      SourceDestCheck: true


  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-a60c23b0
      InstanceType: t2.small
      KeyName: default-ssh-key
      NetworkInterfaces:
      - NetworkInterfaceId:
          Ref: NICC
        DeviceIndex: 0
      - NetworkInterfaceId:
          Ref: NIC1
        DeviceIndex: 1
      - NetworkInterfaceId:
          Ref: NIC2
        DeviceIndex: 2

